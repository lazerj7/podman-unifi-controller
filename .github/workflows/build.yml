# This is a basic workflow to help you get started with Actions

name: Build

env:
  MONGODB_VERSION: 3.6

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: test
        run: |
          set -x
          . /etc/os-release
          echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
          sudo apt-get update -qq
          sudo apt-get install -qq -y uidmap podman slirp4netns
          sudo truncate -s 0 /etc/containers/registries.conf
          echo -e "[registries.search]\nregistries = ['quay.io', 'docker.io', 'registry.centos.org', 'registry.fedoraproject.org', 'registry.access.redhat.com']\n\n[registries.insecure]\nregistries = []\n\n[registries.block]\nregistries = []" | sudo tee /etc/containers/registries.conf
          podman pull fedora:latest
          podman run --rm=true -e BUILDAH_ISOLATION=chroot -v ${GITHUB_WORKSPACE}:/build:rw fedora:latest /bin/bash -c 'dnf update --refresh -y && dnf install -y podman buildah && buildah unshare bash -c "echo $container && echo '----****unshare****----' && . /etc/os-release && container=$(buildah from scratch) && echo $container && containerMount=$(buildah mount $container) && echo $containerMount"' 
          #&& dnf install --installroot ${containerMount} bash coreutils python2.7 --releasever ${VERSION_ID} --setopt=install_weak_deps=false --setopt=tsflags=nodocs -y && dnf clean all -y --installroot ${containerMount} --releasever ${VERSION_ID} && buildah run ${container} -- python2.7 --version"'
