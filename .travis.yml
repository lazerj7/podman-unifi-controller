language: cpp
os: linux
dist: focal
env:
  global:
    - MONGODB_VERSION=3.6
    - CENTOS_VERSION=8
cache: 
  - pip
  - ccache

stages:
  - Compile Mongo
  - Compile Mongod
  - Finish Compiling Mongod
  - Test MongoDB

install:
  - sudo apt update
  - sudo apt install build-essential python2.7 libpython2.7-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev
  - export CURDIR=$(pwd)
  - cd $HOME
  - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  - python2.7 get-pip.py
  - rm -f get-pip.py
  - cd $CURDIR
  - unset CURDIR

jobs:
  include:
    - stage: Compile Mongo
      name: Compile Mongo arm64
      arch: arm64
      workspaces:
        create:
          - name: mongo-arm64
            paths: 
              - $HOME/mongodb
      script:
        - mkdir -p $HOME/mongodb
        - ./build_mongodb -a aarch64 -j 4 -d $HOME/mongodb mongo
        
    - stage: Compile Mongo
      name: Compile Mongo amd64
      arch: amd64
      workspaces:
        create:
          - name: mongo-amd64
            paths: 
              - $HOME/mongodb
      script:
        - mkdir -p $HOME/mongodb
        - ./build_mongodb -a x86_64 -j 4 -d $HOME/mongodb mongo
    - stage: Compile Mongod
      name: Compile Mongod arm64
      arch: arm64
      workspaces:
        use: mongo-arm64
        create:
          - name: mongod-partial-arm64
            paths: 
              - $HOME/mongodb
      script:
        - rm -f $HOME/mongodb/not_finished
        - timeout --kill-after=30s 35m ./build_mongodb -a aarch64 -j 4 -d $HOME/mongodb -n mongod; build_exit=$?; if [ $build_exit -eq 124 ] || [ $build_exit -eq 137 ]; then echo "Build taking a while. Will resume in next stage."; touch $HOME/mongodb/not_finished; else return $build_exit; fi
        
    - stage: Compile Mongod
      name: Compile Mongod amd64
      arch: amd64
      workspaces:
        use: mongo-amd64
        create:
          - name: mongod-partial-amd64
            paths: 
              - $HOME/mongodb
      script:
        - rm -f $HOME/mongodb/not_finished
        - timeout --kill-after=30s 35m ./build_mongodb -a x86_64 -j 4 -d $HOME/mongodb -n mongod; build_exit=$?; if [ $build_exit -eq 124 ] || [ $build_exit -eq 137 ]; then echo "Build taking a while. Will resume in next stage."; touch $HOME/mongodb/not_finished; else return $build_exit; fi

    - stage: Finish Compiling Mongod
      name: Finish Compiling Mongod arm64
      arch: arm64
      workspaces:
        use: mongod-partial-arm64
        create:
          - name: mongod-arm64
            paths: 
              - $HOME/mongodb
      script:
        - if [ -f $HOME/mongodb/not_finished ]; then echo "Resuming Build."; rm -f $HOME/mongodb/not_finished; ./build_mongodb -a aarch64 -j 4 -d $HOME/mongodb -n mongod; else echo "Build already completed."; fi
        
    - stage: Finish Compiling Mongod
      name: Finish Compiling Mongod amd64
      arch: amd64
      workspaces:
        use: mongod-partial-amd64
        create:
          - name: mongod-amd64
            paths: 
              - $HOME/mongodb
      script:
        - if [ -f $HOME/mongodb/not_finished ]; then echo "Resuming Build."; rm -f $HOME/mongodb/not_finished; ./build_mongodb -a x86_64 -j 4 -d $HOME/mongodb -n mongod; else echo "Build already completed."; fi
    - stage: Test MongoDB
      name: Run MongoDB Tests in arm64 container
      arch: arm64
      workspaces:
        use: mongod-arm64
      before_install:
        - mkdir -p /etc/containers
        - echo -e "[registries.search]\nregistries = ['quay.io', 'registry.centos.org', 'registry.fedoraproject.org', 'docker.io', 'registry.access.redhat.com']\n\n[registries.insecure]\nregistries = []\n\n[registries.block]\nregistries = []" | sudo tee /etc/containers/registries.conf
        - . /etc/os-release
      install:
        - echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
        - curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
        - sudo apt-get update
        - sudo apt-get -y upgrade 
        - sudo apt-get -y install podman
      script:
        - podman pull centos:$CENTOS_VERSION
        - podman run --rm=true -e CENTOS_VERSION=$CENTOS_VERSION -e BUILDAH_ISOLATION=chroot -v $TRAVIS_BUILD_DIR:/build:rw -v $HOME/mongodb:/mongodb:rw centos:$CENTOS_VERSION /bin/bash -c "dnf update --refresh -y && dnf install -y podman buildah && buildah unshare bash -c '/build/ci/test_mongodb -d /mongodb'"
    - stage: Test MongoDB
      name: Run MongoDB Tests in amd64 container
      arch: amd64
      workspaces:
        use: mongod-amd64
      before_install:
        - mkdir -p /etc/containers
        - echo -e "[registries.search]\nregistries = ['quay.io', 'registry.centos.org', 'registry.fedoraproject.org', 'docker.io', 'registry.access.redhat.com']\n\n[registries.insecure]\nregistries = []\n\n[registries.block]\nregistries = []" | sudo tee /etc/containers/registries.conf
        - . /etc/os-release
      install:
        - echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
        - curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
        - sudo apt-get update
        - sudo apt-get -y upgrade 
        - sudo apt-get -y install podman
      script:
        - podman pull centos:$CENTOS_VERSION
        - podman run --rm=true -e CENTOS_VERSION=$CENTOS_VERSION -e BUILDAH_ISOLATION=chroot -v $TRAVIS_BUILD_DIR:/build:rw -v $HOME/mongodb:/mongodb:rw centos:$CENTOS_VERSION /bin/bash -c "dnf update --refresh -y && dnf install -y podman buildah && buildah unshare bash -c '/build/ci/test_mongodb -d /mongodb'"
